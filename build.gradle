plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '22'
targetCompatibility = '22'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.todoapp'
    mainClass = 'com.example.todoapp.Launcher'
}

javafx {
    version = '22'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    implementation 'io.github.palexdev:materialfx:11.17.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${project.name}-${project.version}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'ToDoApp'
    }
    jpackage {
        installerName = project.name
        imageName = project.name
        vendor = 'Xedric'
        installerOptions = [
                '--description', project.description,
                '--copyright', 'Copyrigth Â© 2025',
                '--app-version', project.version
        ]

        installerType = project.findProperty('installerType')
        // we will pass this from the command line (example: -PinstallerType=msi)
        if (installerType == 'msi') {
            installerOptions += [
                    '--win-per-user-install', '--win-dir-chooser',
                    '--win-menu', '--win-shortcut'
            ]
        }
    }
}




jlinkZip {
    group = 'distribution'
}

jpackage {
    doFirst {
        project.getProperty('installerType') // throws exception if its missing
    }
}